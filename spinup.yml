---
- name: Proxmox vm
  hosts: all
  gather_facts: false
  tasks:
    - set_fact:
        yeppers: "Linux-temp-{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=8') }}"
    - community.general.proxmox_kvm:
        api_user: "{{ api_user}}"
        # api_password: 678ProxMox!
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        api_host: "{{ api_host }}"
        validate_certs: no
        clone: "{{ clone }}"
        name: "{{ yeppers }}"
        node: "{{ node }}"
        full: true
        format: unspecified
        timeout: 500
        agent: "enabled=1"
    - name: Sleep for 10 seconds and continue with play
      ansible.builtin.wait_for:
        timeout: 10
      delegate_to: localhost

    - name: vm state stopped
      community.general.proxmox_kvm:
        api_user: "{{ api_user}}"
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        api_host: "{{ api_host }}"
        name: "{{ yeppers }}"
        node: "{{ node }}"
        state: current
      register: vmstatus
    - set_fact: vmid="{{ vmstatus.vmid }}"

    - name: start if stopped
      community.general.proxmox_kvm:
        api_user: "{{ api_user}}"
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        api_host: "{{ api_host }}"
        name: "{{ yeppers }}"
        node: "{{ node }}"
        state: started
      when: vmstatus.status == "stopped"
      register: vmstarted

    - name: Sleep for 10 seconds for vm to start
      ansible.builtin.wait_for:
        timeout: 10
      delegate_to: localhost

    - name: vm state running check
      wait_for:
        community.general.proxmox_kvm:
          api_user: "{{ api_user}}"
          api_token_id: "{{ api_token_id }}"
          api_token_secret: "{{ api_token_secret }}"
          api_host: "{{ api_host }}"
          name: "{{ yeppers }}"
          node: "{{ node }}"
          state: current
        register: vmstatus
      when: vmstatus.status == "running"

    # - name: Sleep for 20 seconds and continue with play
    #   ansible.builtin.wait_for:
    #     timeout: 20
    #   delegate_to: localhost

    - name: Get mac address
      ansible.builtin.uri:
        url: "https://{{api_host}}:8006/api2/json/nodes/hppve/qemu/{{vmid}}/config"
        method: GET
        return_content: yes
        validate_certs: no
        headers:
          Authorization: "PVEAPIToken={{api_user}}!{{api_token_id}}={{api_token_secret}}"
      register: result
    - set_fact: mac="{{ result.json['data']['net0'].replace('virtio=','').split(',')[0] }}"
    - set_fact: mac="{{ mac|lower }}"

    # - name: Sleep for 30 seconds and continue with play
    #   ansible.builtin.wait_for:
    #     timeout: 30
    #   delegate_to: localhost

    - name: getarp
      shell: nmap -sT 192.168.0.0/24
      register: nmap
    - debug:
        var: nmap 
    - name: getip
      shell: arp -n  | grep "{{ mac|lower | regex_replace('^\\/|\\/$', '') }}" | awk '{ print $1 }'
      register: theip
    # - name: getip
    #   shell: arp | grep "{{ mac|lower | regex_replace('^\\/|\\/$', '') }}" | awk '{ print $1 }'
    #   register: theip
    - name: Print return the ip var
      ansible.builtin.debug:
        var: theip
    - set_fact: ipaddress_found="{{ theip.stdout_lines[0] }}"
    - debug:
        msg: "{{ ipaddress_found }}"
    # - name: Insert ip to cloud hosts
    #   lineinfile:
    #     path: /etc/ansible/cloud-servers.ini
    #     line: "{{ ipaddress_found }}"

    - name: Sending Slack Notification
      uri:
        url: https://hooks.slack.com/services/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
        # url: https://hooks.slack.com/services/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
        method: POST
        headers:
          Content-type: 'application/json'
        return_content: yes 
        validate_certs: no
        body: 
          text: "###########\n YOUR SERVER IS READY\n ---------\n Server: {{ yeppers }}\n IP Address: {{ ipaddress_found }}\n Server also added to Cloud hosts file\n ---------"
        body_format: json
        status_code: [200, 202]
